@model RetailPlatform.API.Models.DTO.Add.CreateAddDTO

<style>
    select {
        overflow: hidden;
        white-space: pre;
        text-overflow: ellipsis;
        -webkit-appearance: none;
    }

    .category-dropdown {
        width: auto !important;
    }
</style>

<div class="container-fluid">
    <div class="page-header">
        <div class="row">
            <div class="col-lg-6">
                <div class="page-header-left">
                    <h3>
                        Kreiraj oglas
                    </h3>
                </div>
            </div>
            <div class="col-lg-6">
                <ol class="breadcrumb pull-right">
                    <li class="breadcrumb-item"><a href="index.html"><i data-feather="home"></i></a></li>
                    <li class="breadcrumb-item">Oglasi ponude</li>
                    <li class="breadcrumb-item active">Kreiraj oglas</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <form id="create-product" asp-controller="Product" enctype="multipart/form-data" asp-action="CreateProduct" autocomplete="off">
        <div class="row product-adding">
            <div class="col-xl-5">
                <div class="card">
                    <div class="card-header">
                        <h5>Osnovne informacije</h5>
                    </div>
                    <div class="card-body">

                        <div class="digital-add needs-validation">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <label class="col-form-label pt-0"><span class="retail-validation">*</span> Naziv proizvoda/usluge</label>
                                <div class="col-xl-8 col-md-7">
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", autocomplete = "off", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="validationCustomtitle" class="col-form-label pt-0"><span class="retail-validation">*</span> Mesto</label>
                                <div class="col-xl-8 col-md-7">
                                    @Html.TextBoxFor(model => model.Place, new { @class = "form-control", autocomplete = "off", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-form-label"><span class="retail-validation">*</span> Kategorije</label>
                                <div class="col-xl-8 col-md-7">
                                    @Html.DropDownListFor(x => x.SelectedCategory, new SelectList(Model.FilteredCategories, "Value", "Text"), "Selektuj kategoriju", htmlAttributes: new { @class = "custom-select form-control", @id = "category" })
                                    @Html.ValidationMessageFor(model => model.SelectedCategory, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-form-label"><span class="retail-validation">*</span> Opis</label>
                                <div class="col-xl-8 col-md-7">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", autocomplete = "off", required = "required", @rows = "8" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label"><span class="retail-validation">*</span> Količina</label>
                                <div class="col-xl-8 col-md-7">
                                    @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", autocomplete = "off", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label"><span class="retail-validation">*</span> Jedinica mere</label>
                                <div class="col-xl-8 col-md-7">
                                    <div class="col-xl-8 col-md-7">
                                        @Html.DropDownListFor(x => x.SelectedUnit, new SelectList(Model.Units, "Value", "Text"), "Selektuj jedinicu mere", htmlAttributes: new { @class = "custom-select form-control", @id = "category" })
                                        @Html.ValidationMessageFor(model => model.SelectedUnit, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-form-label pt-0"><span class="retail-validation">*</span> Cena po jedinici mere:</label><br />
                                <label>(vrednost je izražena u dinarima)</label>
                                <div class="col-xl-8 col-md-7">
                                    @Html.TextBoxFor(model => model.Price, new { @class = "form-control", autocomplete = "off", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-7">
                
                <div class="card">
                    <div class="row" style="margin:10px;">
                        <div class="m-checkbox-inline mb-0 d-flex" style="margin-top:10px;">
                            <div class="col-sm-4 col-md-4 col-lg-4">
                                @Html.CheckBoxFor(model => model.IsComepnsation, new { @class = "filled-in chk-col-green form-check-input", onclick="handleClick()" })
                                <label for="@Html.DisplayNameFor(model => model.IsComepnsation)">Kompenzacija</label>
                            </div>
                            <div class="col-sm-4 col-md-4 col-lg-4">
                                @Html.CheckBoxFor(model => model.IsDiscontSale, new { @class = "filled-in chk-col-green form-check-input" })
                                <label for="@Html.DisplayNameFor(model => model.IsDiscontSale)">Diskontna prodaja</label>
                            </div>
                            <div class="col-sm-4 col-md-4 col-lg-4">
                                @Html.CheckBoxFor(model => model.IsExchange, new { @class = "filled-in chk-col-green form-check-input" })
                                <label for="@Html.DisplayNameFor(model => model.IsExchange)">Razmena</label>
                            </div>
                        </div>
                    </div>

                    <div class="row d-none" id="compesation" style="margin:10px;">
                        <p>Kompenzovao bih ili razmenio robu za:</p>
                        <div class="col-sm-4 col-md-4 col-lg-4">
                            <div class="col-xl-8 col-md-7">
                                @Html.DropDownListFor(x => x.SelectedCategory1, new SelectList(Model.FilteredCategories, "Value", "Text"), "Selektuj kategoriju", htmlAttributes: new { @class = "custom-select form-control category-dropdown" })
                                @Html.ValidationMessageFor(model => model.SelectedCategory1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-4 col-md-4 col-lg-4">
                            <div class="col-xl-8 col-md-7">
                                @Html.DropDownListFor(x => x.SelectedCategory2, new SelectList(Model.FilteredCategories, "Value", "Text"), "Selektuj kategoriju", htmlAttributes: new { @class = "custom-select form-control category-dropdown" })
                                @Html.ValidationMessageFor(model => model.SelectedCategory2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-4 col-md-4 col-lg-4">
                            <div class="col-xl-8 col-md-7">
                                @Html.DropDownListFor(x => x.SelectedCategory3, new SelectList(Model.FilteredCategories, "Value", "Text"), "Selektuj kategoriju", htmlAttributes: new { @class = "custom-select form-control category-dropdown" })
                                @Html.ValidationMessageFor(model => model.SelectedCategory3, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                   
                    <div class="card-header">
                        <h5>Dodaj fotografije</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-6 col-md-6 col-lg-6">
                                <input type="file" name="firstImg" id="firstImg" class="dropify" data-height="300" data-default-file="@Model.ImgUrl1" onchange="loadFile1(event)" />
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-6">
                                <input type="file" name="secondImg" id="secondImg" class="dropify" data-height="300" data-default-file="@Model.ImgUrl2" onchange="loadFile2(event)" />
                            </div>
                        </div>
                        <div class="row" style="margin-top:25px;">
                            <div class="col-sm-6 col-md-6 col-lg-6">
                                <input type="file" name="thirdImg" id="thirdImg" class="dropify" data-height="300" data-default-file="@Model.ImgUrl3" onchange="loadFile3(event)" />
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-6">
                                <input type="file" name="fourthImg" id="fourthImg" class="dropify" data-height="300" data-default-file="@Model.ImgUrl4" onchange="loadFile4(event)" />
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </form>
    <div class="card">
        <div class="card-body">
            <div class="digital-add needs-validation">
                <div class="form-group mb-0">
                    <div class="product-buttons text-center">
                        <button type="submit" form="create-product" class="btn btn-primary">Sačuvaj</button>
                        <button type="button" class="btn btn-light" onclick="returnToAdds()">Zatvori</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <h6>Cena ili vrednost u oglasu izražena je u dinarima. Minimalna cena ili vrednost u oglasu ne može biti niža od 10.000 dinara. </h6>
</div>

<script>
    var loadFile1 = function (event) {
        var firstImg = document.getElementById('firstImg');
        firstImg.src = URL.createObjectURL(event.target.files[0]);
    };

    var loadFile2 = function (event) {
        var secondImg = document.getElementById('secondImg');
        secondImg.src = URL.createObjectURL(event.target.files[0]);
    };

    var loadFile3 = function (event) {
        var thirdImg = document.getElementById('thirdImg');
        thirdImg.src = URL.createObjectURL(event.target.files[0]);
    };

    var loadFile4 = function (event) {
        var fourthImg = document.getElementById('fourthImg');
        fourthImg.src = URL.createObjectURL(event.target.files[0]);
    };
</script>

@section headSection {
    <link href="~/dropify/dist/css/dropify.min.css" rel="stylesheet" />

}

@section dataTables {
    <script src="~/dropify/dist/js/dropify.min.js"></script>
    <script src="~/js/custom-js/add-item.js"></script>
    <script>
        $(document).ready(function () {
            $('.dropify').dropify();
            var drEvent = $('#input-file-events').dropify();

            drEvent.on('dropify.beforeClear', function (event, element) {
                return confirm("Do you really want to delete \"" + element.file.name + "\" ?");
            });

            drEvent.on('dropify.afterClear', function (event, element) {
                alert('File deleted');
            });

            drEvent.on('dropify.errors', function (event, element) {
                console.log('Has Errors');
            });

            var drDestroy = $('#input-file-to-destroy').dropify();
            drDestroy = drDestroy.data('dropify')
            $('#toggleDropify').on('click', function (e) {
                e.preventDefault();
                if (drDestroy.isDropified()) {
                    drDestroy.destroy();
                } else {
                    drDestroy.init();
                }
            })

            $()
        });
    </script>
}

